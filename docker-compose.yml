version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.3.3
    container_name: "lfpsys-nfe-upload-services_zookeeper"
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:3.3.3
    container_name: "lfpsys-nfe-upload-services_kafka"
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./data/kafka:/var/lib/kafka/data

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: "lfpsys-nfe-upload-services_kafdrop"
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  database:
    image: postgres:16.3
    container_name: "lfpsys-all-services_postgres_db"
    environment:
      - POSTGRES_PASSWORD=postgres_psw
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"

  redis:
    image: redis:7.4
    container_name: "lfpsys-nfe-upload-services_redis_db"
    environment:
      - REDIS_PASSWORD=redis_psw
    command: [ sh, -c, "rm -f /data/dump.rdb && redis-server", "redis-server", "--requirepass", "redis_psw" ]
    ports:
      - '6379:6379'

networks:
  broker-kafka:
    driver: bridge